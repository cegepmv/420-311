<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Structures de donnée</title>
    <link>http://localhost:1313/420-311/index.html</link>
    <description>Objectifs généraux du cours Ce cours vous permettra de :&#xA;Concevoir et programmer des applications en Java en utilisant les principales structures de données.&#xA;Évaluer et comparer la complexité algorithmique des opérations (temps et mémoire).&#xA;Utiliser des fils d’exécution (threads) pour exécuter plusieurs tâches en parallèle.&#xA;Développer un esprit critique pour choisir la bonne structure et le bon paradigme selon le contexte.&#xA;Pourquoi étudier les structures de données ? Parce qu’elles sont au cœur de la programmation : tout logiciel, du plus simple au plus complexe, repose sur des structures de données.</description>
    <generator>Hugo</generator>
    <language>fr-ca</language>
    <lastBuildDate>Sat, 06 Sep 2025 17:51:48 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/420-311/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Préalables</title>
      <link>http://localhost:1313/420-311/intro/index.html</link>
      <pubDate>Tue, 26 Aug 2025 08:21:07 -0400</pubDate>
      <guid>http://localhost:1313/420-311/intro/index.html</guid>
      <description>Dans ce module nous ferons une courte révision des notions essentielles au cours.</description>
    </item>
    <item>
      <title>Structure de données</title>
      <link>http://localhost:1313/420-311/sdd/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/420-311/sdd/index.html</guid>
      <description>Dans ce chapitre nous allons découvrir quelques structures de données et apprendre à choisir la bonne structure selon le problème.&#xA;Ⓜ️ Le langage Java a élargi et harmonisé la bibliothèque de classes utilitaires (java.util).&#xA;Ⓜ️ On y trouve désormais des classes permettant de manipuler les principales structures de données, c’est-à-dire les vecteurs dynamiques, les ensembles, les listes chaînées, les queues et les tables associatives.&#xA;Ⓜ️ Nous commencerons par examiner les concepts communs qu’elles (structures de données) exploitent ainsi : généricité, itérateur, ordonnancement et relation d’ordre.</description>
    </item>
    <item>
      <title>Complexité algorithmique</title>
      <link>http://localhost:1313/420-311/complexalgo/index.html</link>
      <pubDate>Sat, 06 Sep 2025 17:51:48 -0400</pubDate>
      <guid>http://localhost:1313/420-311/complexalgo/index.html</guid>
      <description>Dans ce chapitre, nous allons voir ce que signifie la notation Big-O et analyser la complexité d’un algorithme simple, ainsi que comparer plusieurs approches pour résoudre un même problème. En fin, nous allons voir comment mesurer expérimentalement la performance d’un programme en Java.</description>
    </item>
  </channel>
</rss>